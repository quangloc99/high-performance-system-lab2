\documentclass{article}
\usepackage[a4paper, margin=1in]{geometry}

%Russian-specific packages
%--------------------------------------
\usepackage[tuenc]{fontspec}%for lualatex case
\usepackage[T2A]{fontenc}
\usepackage[utf8x]{inputenc}
\usepackage{indentfirst}
% \usepackage[english,russian]{babel} 
\setsansfont{CMU Sans Serif}%{Arial}
\setmainfont{CMU Serif}%{Times New Roman}
\setmonofont{CMU Typewriter Text}%{Consolas}

\usepackage{tikz}
\usepackage{minted}
% \usepackage{algoflowchart}      % <-- this is a local package, and I am the author 
\usepackage{graphicx}
\usemintedstyle{borland}

\renewcommand{\familydefault}{\rmdefault}
\def\requiredField#1{\textcolor{red}{#1}}

\begin{document}
\begin{titlepage}
    \begin{center} «Национальный исследовательский университет ИТМО» \end{center}

    \vfill
    \begin{center}
        \textbf{\huge
            Лабораторная работа №1 по дисциплину
            "Высокопроизводительные системы"
        } \\
        \medskip
        Номер варианта - 10

    \end{center}

    \vfill

    \begin{flushright}
        Выполнил: Чан Куанг Лок\\
        Группа: P43011
    \end{flushright}

    \begin{center}
        Санкт-Петербург\\ 2021 г
    \end{center}
\end{titlepage}

\section{Описание задания}
\subsection{Цели работы}

Изучение библиотеки MPI путем реализации клеточного автомата.

\subsection{Вариант}
\begin{tabular}{|c|c|}
    \hline
    Клеточный автомат & Способ распаралеллирования \\
    \hline
    Черви патерсона & В шахматном парядке \\
    \hline
\end{tabular}
    

\section{Описание работы}

Этот клеточный автомат не имеет ничего общего с параллелизмом, потому что есть
только один червь, есть небольшое фиксированное количество состояний, которые
нужно изменить. Но в этой лабораторной работе я буду делать это
«распараллеливанием».

Сначала делю доску на регионы. Количество регионов равно $n \times n$, где $n$ -
количество процессов. $I$-й процесс займет $i$-ю область первой строки, $(i +
1)$ -ю область второй строки, $(i + 2)$ -ю область третьей строки, ... Это
похоже на вариант «диагональный», но в заявлении также сказано, что мне нужно
заставить его работать с любым количеством процессов, и это единственный
логичный способ разбить плату на регионы.

Программу можно разделить на этапы:
\begin{itemize}
    \item Чтение данных.
    \item Разделение регионов.
    \item Разделение состояний.
    \item Моделирование.
    \item Объединение состояний.
    \item Запись данных.
\end{itemize}

Первый этап выполняется только процессом 0. После этого процесс 0 отправит
размер платы другим процессам.

На втором этапе все процессы логически разделят регион, а также займут какие-то
регионы.

На третьем этапе процесс 0 отправит данные со входа другому процессу.

Фазу моделирования можно разделить на подэтапы:
\begin{itemize}
    \item Вертикальный обмен.
    \item Горизонтальный обмен.
    \item Внутренний обмен.
    \item Обновление результата.
\end{itemize}

Первая и вторая подэтапы выполняются в кольце: процесс 0 отправляет данные
процессу 1, процесс 1 отправляет данные процессу 2, ...

Подфаза внутреннего обмена - это фаза, когда внутренней области требуются данные
из другой области в том же процессе, но это не связано с MPI.

Результат объединения почти такой же, как и в состояниях разделения, а результат
записи также почти такой же, как и при чтении данных, только в обратном порядке.

\section{Исходный код}
Думаю, мне не следует включать код в отчет, поскольку моя основная программа
содержит около 500 строк кода. Поэтому я предоставлю ссылку на репозиторий
позже.

\section{Вывод}
В ходе лабораторной работы я изучил некоторые основные функции MPI, такие как
\verb`MPI_Send`, \verb`MPI_Recv`, а также некоторые базовые шаблоны для разработки
параллельной программы с этим интерфейсом, такие как обмен данными в кольцевом
порядке, широкое распространение.

\end{document}

% listing code with:
%    \inputminted[fontsize=\footnotesize]{lang}{realtive-or-absolute-dir}  

% insert image
%    \includegraphics[width=3cm, height=4cm]{img_path}
% vim: wrap tw=80


